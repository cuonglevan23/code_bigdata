import streamlit as st
import geopandas as gpd
import folium
from streamlit_folium import st_folium

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn shapefile ƒë·∫ßu ra t·ª´ Task 2
SHAPEFILE_PATH = "output/ZIPCodeCrimeCount.shp"

# T√™n c·ªôt ZIPCode v√† s·ªë l∆∞·ª£ng t·ªôi ph·∫°m
ZIP_COLUMN = "ZCTA5CE10"
COUNT_COLUMN = "count"

# T·ªça ƒë·ªô trung t√¢m c·ªßa Chicago (n·∫øu ch∆∞a c√≥ trong shapefile)
CHICAGO_COORDINATES = [41.8781, -87.6298]
ZOOM_LEVEL = 10

st.set_page_config(layout="wide")
st.title("üó∫Ô∏è Crime Count by ZIP Code - Choropleth Map")

# H√†m t·∫£i d·ªØ li·ªáu v·ªõi caching
@st.cache_data
def load_data():
    gdf = gpd.read_file(SHAPEFILE_PATH)
    gdf['geometry'] = gdf['geometry'].simplify(tolerance=0.01)  # Gi·∫£m ƒë·ªô chi ti·∫øt ƒë·ªÉ tƒÉng hi·ªáu su·∫•t
    # L·ªçc d·ªØ li·ªáu ch·ªâ l·∫•y c√°c ZIP code c·ªßa Chicago (C√≥ th·ªÉ thay ƒë·ªïi ƒëi·ªÅu ki·ªán l·ªçc t√πy v√†o d·ªØ li·ªáu shapefile c·ªßa b·∫°n)
    chicago_zip_codes = ['60601', '60602', '60603', '60604', '60605']  # Th√™m c√°c ZIP code kh√°c c·ªßa Chicago n·∫øu c·∫ßn
    gdf = gdf[gdf[ZIP_COLUMN].isin(chicago_zip_codes)]
    return gdf

# ƒê·ªçc shapefile th√†nh GeoDataFrame
with st.spinner("ƒêang t·∫£i d·ªØ li·ªáu..."):
    gdf = load_data()

# Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu n·∫øu c·∫ßn
if st.checkbox("Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu"):
    st.dataframe(gdf[[ZIP_COLUMN, COUNT_COLUMN]])

# T·∫°o b·∫£n ƒë·ªì Folium v·ªõi t·ªça ƒë·ªô c·ªßa Chicago
m = folium.Map(location=CHICAGO_COORDINATES, zoom_start=ZOOM_LEVEL, tiles="CartoDB positron")

# Th√™m l·ªõp choropleth
folium.Choropleth(
    geo_data=gdf,
    name="choropleth",
    data=gdf,
    columns=[ZIP_COLUMN, COUNT_COLUMN],
    key_on=f"feature.properties.{ZIP_COLUMN}",
    fill_color="YlOrRd",
    fill_opacity=0.7,
    line_opacity=0.2,
    legend_name="Crime Count",
).add_to(m)

# Th√™m popup ƒë·ªÉ hi·ªán chi ti·∫øt
folium.GeoJson(
    gdf,
    name="ZIPs",
    tooltip=folium.GeoJsonTooltip(fields=[ZIP_COLUMN, COUNT_COLUMN], aliases=["ZIP Code", "Crime Count"])
).add_to(m)

# Hi·ªÉn th·ªã b·∫£n ƒë·ªì tr√™n Streamlit
st_folium(m, width=1000, height=600)
